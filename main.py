import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler

from parse import parse_products
from config import *

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
shown_products = []

def start(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∫–æ–º–∞–Ω–¥–µ /get_products"""
    update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ /get_products –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤')

def get_products(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 —Ç–æ–≤–∞—Ä–æ–≤)"""
    global shown_products
    products = parse_products()

    # –£–¥–∞–ª—è–µ–º —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞
    available_products = [p for p in products if p not in shown_products]

    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–æ–≤–∞—Ä–æ–≤
    products_to_show = available_products[:5]

    if not products_to_show:
        update.message.reply_text('–í—Å–µ —Ç–æ–≤–∞—Ä—ã —É–∂–µ –±—ã–ª–∏ –ø–æ–∫–∞–∑–∞–Ω—ã')
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö
    shown_products.extend(products_to_show)

    for i, (name, amount, cashback, img, product_link, rating_count, rating_percentage, discont_elem, discont_text) in enumerate(products_to_show, start=1):
        if rating_percentage >= 80:
            stars = "‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"
        elif rating_percentage > 60 and rating_percentage < 80:
            stars = "‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"
        elif rating_percentage > 40 and rating_percentage <60:
            stars = "‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è"
        
        if discont_text:
            amount = amount
        else:
            discont = "–ë–µ–∑ —Å–∫–∏–¥–∫–∏"
            discont_text = amount
        product_info = f"‚ñº–¢–æ–≤–∞—Ä {i}‚ñº:\n\n{name}\n\n‚ï†–¶–µ–Ω–∞: <b>{amount}‚ÇΩ</b>\n‚ï†–ö–µ—à–±–µ–∫(—Å–±–µ—Ä—Å–ø–∞—Å–∏–±–æ): <b>{cashback}</b>‚ö°Ô∏è\n\n‚ï†–û—Ç–∑—ã–≤–æ–≤: {rating_count}üë•\n‚ï†–û—Ü–µ–Ω–∫–∞: {stars}\n\n‚ï†<a href='{product_link}'>–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</a>\n\n‚ù§Ô∏è–°–ö–ò–î–ö–ê\n‚ï†{discont_elem}\n‚ï†–¶–µ–Ω–∞ –±–µ–∑ —Å–∫–∏–¥–∫–∏:<b>{discont_text}</b>"
        context.bot.send_photo(chat_id=update.effective_chat.id, photo=img, caption=product_info, parse_mode='HTML')

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    updater = Updater(token)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dispatcher = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("get_products", get_products))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()

    # –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞
    updater.idle()

if __name__ == '__main__':
    main()